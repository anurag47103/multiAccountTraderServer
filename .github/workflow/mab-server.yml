name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main # Trigger the workflow on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
    # Step 1: Checkout the repo
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Get the version label from the GitHub sha
    - name: Get version label
      id: vars
      run: echo ::set-output name=sha_short::$(echo $GITHUB_SHA | cut -c 1-7)

    # Step 3: Configure AWS credentials from GitHub secrets
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 4: Login to Amazon ECR
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    # Step 5: Build, tag, and push the Docker image to Amazon ECR
    - name: Build and push Docker image to Amazon ECR
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

    # Step 6: Deploy to AWS Elastic Beanstalk
    - name: Deploy to Elastic Beanstalk
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        APPLICATION_NAME: your-eb-application-name
        ENVIRONMENT_NAME: your-eb-environment-name
      run: |
        # Replace the <AWS_ACCOUNT_ID> with your actual AWS account ID and update the region if necessary
        sed -i 's/<AWS_ACCOUNT_ID>/'"$AWS_ACCOUNT_ID"'/g' Dockerrun.aws.json
        sed -i 's/<REGION>/'"$AWS_REGION"'/g' Dockerrun.aws.json
        sed -i 's/<ECR_REPOSITORY>/'"$ECR_REPOSITORY"'/g' Dockerrun.aws.json
        sed -i 's/<IMAGE_TAG>/'"$IMAGE_TAG"'/g' Dockerrun.aws.json

        # Deploy using the AWS CLI
        aws elasticbeanstalk create-application-version --application-name $APPLICATION_NAME \
          --version-label $IMAGE_TAG --source-bundle S3Bucket=$S3_BUCKET,S3Key=$ZIP_FILE

        aws elasticbeanstalk update-environment --application-name $APPLICATION_NAME \
          --environment-name $ENVIRONMENT_NAME --version-label $IMAGE_TAG
